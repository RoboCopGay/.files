{"innormalQuit":false,"windows":[{"path":"/home/plankiton/D3-Lab/slide.md","hasUnsaved":true,"scrollPos":5251,"useCRLF":false,"syncDate":1625141222319,"mountFolder":"/home/plankiton/D3-Lab","content":"# O que é linux?\n\nAqui as pessoas menos inseridas nesse mundo quase \"underground\" se confundem muito, primeiramente linux não é um Sistema Operacional, e um tanto mais complicado de se explicar.\n\n## Sistema Operacional\n\nSistema Operacional é uma soma entre vários componentes com responsabilidades diferentes, basicamente o kernel (que vem de núcleo), as bibliotecas (abstrações para interação com o kernel), as aplicações e o shell (a casca de interação direta com o usuario).\n\n![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e2184bc0-6ccc-47fe-b505-e0fdc8d9e8a5/Untitled.png](camadas.png)\n\n### Kernel\n\nÉ o Nucleo do Sistema Operacional, é o responsável por conversar diretamente com o processador.\n\n### Library\n\nSão bibliotecas padrões que se comunicam diretamente com o kernel através das SysCalls (chamadas de sistema).\n\nEssas SysCalls são funções pra coisas como:\n\n- Ler - read\n- Escrever - write\n- Abrir - open\n- Fechar - close\n- Desligar - shutdown\n- [Tabela com as syscalls no linux](https://filippo.io/linux-syscall-table/)\n\n### UserLand\n\nÉ onde seu chrome, vscode e spotify rodam, além de bibliotecas de alto nível, ou até mesmo o seu Shell, que pode ser um bash ou zsh da vida, ou a sua interface gráfica, esteja ela em Windows, Mac ou em um Linux.\n\n# Então o que é linux?\n\nLinux é nada mais que um kernel, ele está lá controlando todas as chamadas a funções de hardware e fazendo essa ponte para as bibliotecas na camada de cima. Ele foi criado pelo maravilhosíssimo [Linus Torvalds](https://en.wikipedia.org/wiki/Linus_Torvalds), em 1991, utilizando a biblioteca padrão criada pelo projeto [GNU](https://pt.wikipedia.org/wiki/GNU) (PS: O GNU criou o conjunto de bibliotecas junto com o kernel hurd, mas o hurd desde aquela época não evoluiu quase nada e ainda é instável, mas por ter essas bibliotecas no linux, algumas pessoas o chamam de GNU/LINUX, mas que fique claro que são projetos diferentes e independentes).\n\n![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/63bdd1b2-eed0-4791-96fa-a80de2c52d84/Untitled.png](torvalds.png)\n\nUma outra coisa que é bom de relembrar é que o Linux não é um [UNIX](https://en.wikipedia.org/wiki/Unix), mas um clone dele, então costumam dizer que eles estão na mesma família mas são quase irmãos adotivos, isso porque a base do linux foi criada toda do zero pelo Torvalds, mas usando o mesmo padrão [POSIX](https://en.wikipedia.org/wiki/POSIX) que o UNIX original seguia, por isso tem muita coisa semelhante, mas os binários que rodam em um não rodam em outro.\n\n- Existem diversos filhos biológicos na família, alguns deles são os BSDs, o Solaris, o Minix, o Darwin..\n\n## Quais as principais diferenças entre Linux, Mac e Windows?\n\n![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f3e931ca-3729-42ce-90b2-8539a4cbc5e8/LinuxWinMac.jpg](linuxmacwin.jpg)\n\nBasicamente em primeiro lugar, o Kernel, e isso faz total diferença já que quando o kernel muda, necessariamente as bibliotecas que se comunicam com o Kernel mudam também,  e consequentemente toda a UserLand sofre com isso..\n\nMas se fossemos colocar em um nível de distância, o Linux e o Mac (Dois irmãos brigões diga-se de passagem) estão a milhares de anos luz de distancia do primo terraplanista Windows.\n\n## \"C:\\\" vs. \"/\"\n\nFato de o Darwin (kernel do Mac) e o Linux serem \"UNIX\" eles tem diversas semelhanças notáveis, como a \"/\" (a raiz do sistema, do ingles \"root\"), e os dispositivos representados como arquivos em pastas como \"/dev\" no linux, (não sei onde isso fica no Mac, mas saiba que o funcionamento é semelhante) enquanto no Windows os dispositivos ganham uma letra (como C:) e (pelo menos os de armazenamento) tem uma raiz própria.\n\n## Por que \"*.EXE\" não roda no linux?\n\nBasicamente todo o binário (código executável), de um Windows, os famosos .Exe fazem chamadas para o Kernel do windows (o NT Kernel), e o kernel linux simplesmente não entende. É o mesmo que falar português com uma pessoa que só sabe falar chinês...\n\nE por isso, se tu colocar um interprete no meio isso torna possível, isso é basicamente o que o [wine](https://www.winehq.org/) faz.\n\n## Por que se usa tanto terminal em linux?\n\nGrande parte dos motivos para usar Linux, são pelas vantagens de ferramentas de desenvolvimento e de deploy em servidores, e a maioria delas não tem interface gráfica, o que não significa que você precise de terminal para coisas comuns...\n\nEntão criar arquivos, documentos, navegar na internet e esse tipo de tarefa comum, da pra fazer totalmente em modo gráfico.\n\n# Oque são Distribuições Linux?\n\nSão sistemas operacionais que usam o Kernel Linux, e eles possuem seus próprios públicos alvos, objetivos e customizações tanto diretamente no Kernel, quanto em suas aplicações e shell.\n\nGeralmente as coisas mais importantes em uma distribuição são os gerenciadores de pacotes, de daemons e as customizações no kernel focadas em algum objetivo.\n\nMas normalmente elas também tem uma interface gráfica especifica e ferramentas próprias por padrão.\n\n### Gerenciadores de pacotes\n\nBasicamente são ferramentas para facilitar a instalação, atualização e desinstalação de aplicações e bibliotecas de um sistema, além de também servirem para empacotar aplicações.\n\nOs mais famosos gerenciadores de pacotes são os usados pelas distribuições com maiores famílias:\n\n- rpm, dnf e yum - Red Hat\n- O rpm é o gerenciador de pacote e o dnf e yum, são interfaces para facilitar o uso do rpm além de serem usados também para fazer download automático dos pacotes.\n- dpkg, apt e apt-get - Debian\n- O mesmo caso do Red Hat, onde o dpkg é o gerenciador de pacotes e o apt e apt-get são as abstrações.\n- pacman, AUR - Arch Linux\n- Diferente dos anteriores o pacman não precisa de abstrações, e o AUR ta mais pra um repositório da comunidade de usuários, onde qualquer um pode empacotar um sofware pro Arch, geralmente usam-se os AUR Helpers pra baixar deles, um dos melhores é o yay.\n\n### Gerenciadores de Daemon\n\nSão ferramentas pra gerenciar os serviços que rodam em segundo plano, os famosos demônios que agem sem nossa interferência com privilégios de ROOT.\n\nCoisas como os Servidores Gráficos, serviços de bluetooth, serviços de SSH, drivers de dispositivos e etc.\n\n- Systemd\n- Init\n- UpStart\n\n### E o que significa uma distro ser baseada em outra?\n\nBasicamente você tem duas formas de criar uma distro Linux, tu pode criar \"from scratch\", onde tu pega o kernel e cria/coloca coisas como gerenciador de pacotes, gerenciador de daemons, e etc. tudo manualmente, e assim tem que criar servidores próprios para os pacotes que sua distro vai usar e além disso tem que compilar um a um todos, empacotar e upar nesse servidor.\n\nOu tu pode escolher uma distro que já tem todo esse eco-sistema e criar apenas as customizações que você gostaria que ela tivesse.\n\n## Principais Distros\n\nAs maiores e mais populares distribuições linux:\n\n- Android\n  - NetHunter\n- Red Hat\n  - Fedora\n- Debian\n  - Ubuntu\n    - Mint\n  - Kali Linux\n- Arch Linux\n  - Manjaro\n- Gentoo\n  - Funtoo\n\n# Usuário ROOT e o poder do kernel\n\nBasicamente o \"usuário raiz\", é aquele que tem super poderes e tem permissões de nível superior dentro do linux. Ele é o único que pode iniciar daemons (são mais poderosos que os demônios), e coisas como apagar a \"/\".\n\nQualquer outro usuário só tem poder dentro de sua pasta pessoal \"/home/nutela\", por isso é preciso usar \"sudo\" para rodar comandos com permissões de root\n\n- su: super user  - do: faça → faça como super usuário\n\n## Rings\n\nE agente chama o root de super, mas ele só é super no nível das aplicações, existe uma coisa que chamamos de ring, que vai do 0 ao 3, o 0 sendo o maior nível de poder sobre o hardware:\n\n![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/6c0086b3-7053-49e9-8fc7-31220a31eab2/Untitled.png](rings.png)\n\nO kernel obviamente é deus comparado ao root que roda em ring 3, junto com as aplicações.\n","id":0}]}